@using RoleBasedAuthorization.ViewModels
@model LoginViewModel

@{
    ViewData["Title"] = "Login";
    Layout = "~/Views/Shared/_AccountLayout.cshtml";
}


<div class="account-container">
    <div class="account-box">
        <h2 class="text-center mb-4">Login</h2>
        <form asp-action="Login" method="post">
            @Html.AntiForgeryToken()
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group mb-3">
                <label asp-for="Email"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group mb-3">
                <label asp-for="Password"></label>
                <input asp-for="Password" type="password" class="form-control" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="float-end">
                <a asp-action="VerifyEmail" asp-controller="Account" class="text-decoration-none">Forgot
                    Password?</a>
            </div>
            <div class="form-check mb-3">
                <label class="form-check-label">
                    <input type="checkbox" class="form-check-input" asp-for="RememberMe" />
                    @Html.DisplayNameFor(model => model.RememberMe)
                </label>
            </div>
            <input type="submit" value="Login" class="btn btn-primary col-12" />
            <p class="text-center mt-2">
                Don't have an account? <a asp-action="Register" asp-controller="Account"
                    class="text-decoration-none">Register here</a>.
            </p>
            <div class="text-center">
                <a asp-action="Index" asp-controller="Home"></a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial.cshtml");
    }
}